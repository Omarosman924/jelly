{
  "timestamp": "2025-10-16 13:50:35",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:35",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:35",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-16 13:50:35",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-16 13:50:35",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:35",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:45",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 1,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-16 13:50:45",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-16 13:50:45",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-16 13:50:45",
  "level": "WARN",
  "message": "‚ö†Ô∏è  Redis unavailable - running in fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:45",
  "level": "INFO",
  "message": "üîß Initializing enhanced service container...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 2,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "INFO",
  "message": "üì¶ Registered 8 service classes",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "INFO",
  "message": "‚úÖ Service container initialized successfully in 20293ms",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "INFO",
  "message": "üéâ All services initialized successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "INFO",
  "message": "üéâ Application started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "INFO",
  "message": "üöÄ Restaurant Management System V2 started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "INFO",
  "message": "üì° Server running on port 3000",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "INFO",
  "message": "üåç Environment: production",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "INFO",
  "message": "üîó Health check: http://localhost:3000/health",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:50:55",
  "level": "INFO",
  "message": "üìö API Base URL: http://localhost:3000/api",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:51:43",
  "level": "WARN",
  "message": "HTTP request completed with error",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "method": "GET",
  "url": "/api/health",
  "statusCode": 404,
  "duration": "6ms",
  "userAgent": "curl/8.14.1",
  "ip": "::ffff:172.18.0.7",
  "userId": null
}
{
  "timestamp": "2025-10-16 13:51:43",
  "level": "INFO",
  "message": "::ffff:172.18.0.7 - - [16/Oct/2025:13:51:43 +0000] \"GET /api/health HTTP/1.1\" 404 208 \"-\" \"curl/8.14.1\"",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:26",
  "level": "ERROR",
  "message": "Database Error Error in PostgreSQL connection: Error { kind: Db, cause: Some(DbError { severity: \"FATAL\", parsed_severity: Some(Fatal), code: SqlState(E57P01), message: \"terminating connection due to administrator command\", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some(\"postgres.c\"), line: Some(3211), routine: Some(\"ProcessInterrupts\") }) }",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::connector::postgres::native"
}
{
  "timestamp": "2025-10-16 13:53:26",
  "level": "INFO",
  "message": "Received SIGTERM. Starting graceful shutdown...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:26",
  "level": "INFO",
  "message": "HTTP server closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:26",
  "level": "INFO",
  "message": "üßπ Starting service cleanup...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:26",
  "level": "INFO",
  "message": "Redis disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:26",
  "level": "INFO",
  "message": "‚úÖ Redis disconnected",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:26",
  "level": "WARN",
  "message": "Redis client connection closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:26",
  "level": "WARN",
  "message": "Redis client connection ended",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:26",
  "level": "INFO",
  "message": "Database disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:33",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:33",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:34",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-16 13:53:34",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-16 13:53:34",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:34",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:44",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 1,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-16 13:53:44",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-16 13:53:44",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-16 13:53:44",
  "level": "WARN",
  "message": "‚ö†Ô∏è  Redis unavailable - running in fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:44",
  "level": "INFO",
  "message": "üîß Initializing enhanced service container...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 2,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "INFO",
  "message": "üì¶ Registered 8 service classes",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "INFO",
  "message": "‚úÖ Service container initialized successfully in 20183ms",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "INFO",
  "message": "üéâ All services initialized successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "INFO",
  "message": "üéâ Application started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "INFO",
  "message": "üöÄ Restaurant Management System V2 started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "INFO",
  "message": "üì° Server running on port 3000",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "INFO",
  "message": "üåç Environment: production",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "INFO",
  "message": "üîó Health check: http://localhost:3000/health",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 13:53:54",
  "level": "INFO",
  "message": "üìö API Base URL: http://localhost:3000/api",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:00:45",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:00:45",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:00:45",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-16 14:00:45",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-16 14:00:45",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:00:45",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:00:55",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 1,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-16 14:00:55",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-16 14:00:55",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-16 14:00:55",
  "level": "WARN",
  "message": "‚ö†Ô∏è  Redis unavailable - running in fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:00:55",
  "level": "INFO",
  "message": "üîß Initializing enhanced service container...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 2,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "INFO",
  "message": "üì¶ Registered 8 service classes",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "INFO",
  "message": "‚úÖ Service container initialized successfully in 20196ms",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "INFO",
  "message": "üéâ All services initialized successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "INFO",
  "message": "üéâ Application started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "INFO",
  "message": "üöÄ Restaurant Management System V2 started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "INFO",
  "message": "üì° Server running on port 3000",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "INFO",
  "message": "üåç Environment: production",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "INFO",
  "message": "üîó Health check: http://localhost:3000/health",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:01:05",
  "level": "INFO",
  "message": "üìö API Base URL: http://localhost:3000/api",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:48:51",
  "level": "INFO",
  "message": "Received SIGTERM. Starting graceful shutdown...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:48:51",
  "level": "INFO",
  "message": "HTTP server closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:48:51",
  "level": "INFO",
  "message": "üßπ Starting service cleanup...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:48:51",
  "level": "INFO",
  "message": "Redis disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:48:51",
  "level": "INFO",
  "message": "‚úÖ Redis disconnected",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:48:51",
  "level": "WARN",
  "message": "Redis client connection closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:48:51",
  "level": "WARN",
  "message": "Redis client connection ended",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 14:48:51",
  "level": "ERROR",
  "message": "Database Error Error in PostgreSQL connection: Error { kind: Db, cause: Some(DbError { severity: \"FATAL\", parsed_severity: Some(Fatal), code: SqlState(E57P01), message: \"terminating connection due to administrator command\", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some(\"postgres.c\"), line: Some(3211), routine: Some(\"ProcessInterrupts\") }) }",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::connector::postgres::native"
}
{
  "timestamp": "2025-10-16 14:48:51",
  "level": "INFO",
  "message": "Database disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:34",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:34",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:34",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-16 15:34:34",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-16 15:34:34",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:34",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:44",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 1,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-16 15:34:44",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-16 15:34:44",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-16 15:34:44",
  "level": "WARN",
  "message": "‚ö†Ô∏è  Redis unavailable - running in fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:44",
  "level": "INFO",
  "message": "üîß Initializing enhanced service container...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 2,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "INFO",
  "message": "üì¶ Registered 8 service classes",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "INFO",
  "message": "‚úÖ Service container initialized successfully in 20239ms",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "INFO",
  "message": "üéâ All services initialized successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "INFO",
  "message": "üéâ Application started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "INFO",
  "message": "üöÄ Restaurant Management System V2 started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "INFO",
  "message": "üì° Server running on port 3000",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "INFO",
  "message": "üåç Environment: production",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "INFO",
  "message": "üîó Health check: http://localhost:3000/health",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:34:54",
  "level": "INFO",
  "message": "üìö API Base URL: http://localhost:3000/api",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:41:49",
  "level": "INFO",
  "message": "Received SIGTERM. Starting graceful shutdown...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:41:49",
  "level": "INFO",
  "message": "HTTP server closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:41:49",
  "level": "INFO",
  "message": "üßπ Starting service cleanup...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:41:49",
  "level": "INFO",
  "message": "Redis disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:41:49",
  "level": "INFO",
  "message": "‚úÖ Redis disconnected",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:41:49",
  "level": "WARN",
  "message": "Redis client connection closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:41:49",
  "level": "WARN",
  "message": "Redis client connection ended",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-16 15:41:49",
  "level": "INFO",
  "message": "Database disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:34",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:34",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:34",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-17 19:16:34",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-17 19:16:34",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:34",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:44",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 1,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 19:16:44",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 19:16:44",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 19:16:44",
  "level": "WARN",
  "message": "‚ö†Ô∏è  Redis unavailable - running in fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:44",
  "level": "INFO",
  "message": "üîß Initializing enhanced service container...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 2,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "INFO",
  "message": "üì¶ Registered 8 service classes",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "INFO",
  "message": "‚úÖ Service container initialized successfully in 20518ms",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "INFO",
  "message": "üéâ All services initialized successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "INFO",
  "message": "üéâ Application started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "INFO",
  "message": "üöÄ Restaurant Management System V2 started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "INFO",
  "message": "üì° Server running on port 3000",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "INFO",
  "message": "üåç Environment: production",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "INFO",
  "message": "üîó Health check: http://localhost:3000/health",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:16:54",
  "level": "INFO",
  "message": "üìö API Base URL: http://localhost:3000/api",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:22:59",
  "level": "ERROR",
  "message": "Database Error Error in PostgreSQL connection: Error { kind: Closed, cause: None }",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::connector::postgres::native"
}
{
  "timestamp": "2025-10-17 19:58:08",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:08",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:08",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-17 19:58:08",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-17 19:58:08",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:08",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:18",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 1,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 19:58:18",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 19:58:18",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 19:58:18",
  "level": "WARN",
  "message": "‚ö†Ô∏è  Redis unavailable - running in fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:18",
  "level": "INFO",
  "message": "üîß Initializing enhanced service container...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 2,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "INFO",
  "message": "üì¶ Registered 8 service classes",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "INFO",
  "message": "‚úÖ Service container initialized successfully in 20391ms",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "INFO",
  "message": "üéâ All services initialized successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "INFO",
  "message": "üéâ Application started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "INFO",
  "message": "üöÄ Restaurant Management System V2 started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "INFO",
  "message": "üì° Server running on port 3000",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "INFO",
  "message": "üåç Environment: production",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "INFO",
  "message": "üîó Health check: http://localhost:3000/health",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 19:58:28",
  "level": "INFO",
  "message": "üìö API Base URL: http://localhost:3000/api",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:01:59",
  "level": "ERROR",
  "message": "Database Error Error in PostgreSQL connection: Error { kind: Db, cause: Some(DbError { severity: \"FATAL\", parsed_severity: Some(Fatal), code: SqlState(E57P01), message: \"terminating connection due to administrator command\", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some(\"postgres.c\"), line: Some(3211), routine: Some(\"ProcessInterrupts\") }) }",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::connector::postgres::native"
}
{
  "timestamp": "2025-10-17 20:02:00",
  "level": "INFO",
  "message": "Received SIGTERM. Starting graceful shutdown...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:00",
  "level": "INFO",
  "message": "HTTP server closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:00",
  "level": "INFO",
  "message": "üßπ Starting service cleanup...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:00",
  "level": "INFO",
  "message": "Redis disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:00",
  "level": "INFO",
  "message": "‚úÖ Redis disconnected",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:00",
  "level": "WARN",
  "message": "Redis client connection closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:00",
  "level": "WARN",
  "message": "Redis client connection ended",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:00",
  "level": "INFO",
  "message": "Database disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:08",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:08",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:08",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-17 20:02:08",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-17 20:02:08",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:08",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:18",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 1,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 20:02:18",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 20:02:18",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 20:02:18",
  "level": "WARN",
  "message": "‚ö†Ô∏è  Redis unavailable - running in fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:18",
  "level": "INFO",
  "message": "üîß Initializing enhanced service container...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 2,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "INFO",
  "message": "üì¶ Registered 8 service classes",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "INFO",
  "message": "‚úÖ Service container initialized successfully in 20170ms",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "INFO",
  "message": "üéâ All services initialized successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "INFO",
  "message": "üéâ Application started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "INFO",
  "message": "üöÄ Restaurant Management System V2 started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "INFO",
  "message": "üì° Server running on port 3000",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "INFO",
  "message": "üåç Environment: production",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "INFO",
  "message": "üîó Health check: http://localhost:3000/health",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:02:28",
  "level": "INFO",
  "message": "üìö API Base URL: http://localhost:3000/api",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:24",
  "level": "INFO",
  "message": "Received SIGTERM. Starting graceful shutdown...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:24",
  "level": "INFO",
  "message": "HTTP server closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:24",
  "level": "INFO",
  "message": "üßπ Starting service cleanup...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:24",
  "level": "INFO",
  "message": "Redis disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:24",
  "level": "INFO",
  "message": "‚úÖ Redis disconnected",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:24",
  "level": "WARN",
  "message": "Redis client connection closed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:24",
  "level": "WARN",
  "message": "Redis client connection ended",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:24",
  "level": "INFO",
  "message": "Database disconnected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:36",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:36",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:36",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-17 20:19:37",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-17 20:19:37",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:37",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:47",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 1,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 20:19:47",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 20:19:47",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 20:19:47",
  "level": "WARN",
  "message": "‚ö†Ô∏è  Redis unavailable - running in fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:47",
  "level": "INFO",
  "message": "üîß Initializing enhanced service container...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 2,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "INFO",
  "message": "üì¶ Registered 8 service classes",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "INFO",
  "message": "‚úÖ Service container initialized successfully in 20165ms",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "INFO",
  "message": "üéâ All services initialized successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "INFO",
  "message": "üéâ Application started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "INFO",
  "message": "üöÄ Restaurant Management System V2 started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "INFO",
  "message": "üì° Server running on port 3000",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "INFO",
  "message": "üåç Environment: production",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "INFO",
  "message": "üîó Health check: http://localhost:3000/health",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:19:57",
  "level": "INFO",
  "message": "üìö API Base URL: http://localhost:3000/api",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:33",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:33",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:33",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-17 20:33:33",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-17 20:33:33",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:33",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:43",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 1,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 20:33:43",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 20:33:43",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 20:33:43",
  "level": "WARN",
  "message": "‚ö†Ô∏è  Redis unavailable - running in fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:43",
  "level": "INFO",
  "message": "üîß Initializing enhanced service container...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "ERROR",
  "message": "Redis connection failed",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout",
  "attempt": 2,
  "maxAttempts": 5
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "WARN",
  "message": "Redis connection failed, enabling fallback mode",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "error": "Redis connection timeout"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "WARN",
  "message": "Redis fallback mode enabled - using in-memory storage",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "note": "Data will not persist across server restarts"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "INFO",
  "message": "üì¶ Registered 8 service classes",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "INFO",
  "message": "‚úÖ Service container initialized successfully in 20177ms",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "INFO",
  "message": "üéâ All services initialized successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "INFO",
  "message": "üéâ Application started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "INFO",
  "message": "üöÄ Restaurant Management System V2 started successfully!",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "INFO",
  "message": "üì° Server running on port 3000",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "INFO",
  "message": "üåç Environment: production",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "INFO",
  "message": "üîó Health check: http://localhost:3000/health",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:33:53",
  "level": "INFO",
  "message": "üìö API Base URL: http://localhost:3000/api",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:34:42",
  "level": "INFO",
  "message": "üîß Initializing services...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:34:42",
  "level": "INFO",
  "message": "üóÑÔ∏è  Connecting to database...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:34:42",
  "level": "INFO",
  "message": "Database Info Starting a postgresql pool with 9 connections.",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "target": "quaint::pooled"
}
{
  "timestamp": "2025-10-17 20:34:43",
  "level": "INFO",
  "message": "Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production",
  "provider": "postgresql",
  "url": "postgresql://restaurant_user:***@postgres:5432/restaurant_db"
}
{
  "timestamp": "2025-10-17 20:34:43",
  "level": "INFO",
  "message": "‚úÖ Database connected successfully",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:34:43",
  "level": "INFO",
  "message": "üì° Connecting to Redis...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
{
  "timestamp": "2025-10-17 20:34:48",
  "level": "INFO",
  "message": "Received SIGTERM. Starting graceful shutdown...",
  "service": "restaurant-management",
  "version": "v2",
  "environment": "production"
}
